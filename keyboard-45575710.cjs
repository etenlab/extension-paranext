"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});/*!
 * (C) Ionic http://ionicframework.com - MIT License
 */const c="ionKeyboardDidShow",h="ionKeyboardDidHide",l=150;let r={},t={},o=!1;const g=()=>{r={},t={},o=!1},O=e=>{u(e),e.visualViewport&&(t=n(e.visualViewport),e.visualViewport.onresize=()=>{D(e),y()||b(e)?a(e):i(e)&&d(e)})},u=e=>{e.addEventListener("keyboardDidShow",s=>a(e,s)),e.addEventListener("keyboardDidHide",()=>d(e))},a=(e,s)=>{E(e,s),o=!0},d=e=>{K(e),o=!1},y=()=>{const e=(r.height-t.height)*t.scale;return!o&&r.width===t.width&&e>l},b=e=>o&&!i(e),i=e=>o&&t.height===e.innerHeight,E=(e,s)=>{const p=s?s.keyboardHeight:e.innerHeight-t.height,f=new CustomEvent(c,{detail:{keyboardHeight:p}});e.dispatchEvent(f)},K=e=>{const s=new CustomEvent(h);e.dispatchEvent(s)},D=e=>{r=Object.assign({},t),t=n(e.visualViewport)},n=e=>({width:Math.round(e.width),height:Math.round(e.height),offsetTop:e.offsetTop,offsetLeft:e.offsetLeft,pageTop:e.pageTop,pageLeft:e.pageLeft,scale:e.scale});exports.KEYBOARD_DID_CLOSE=h;exports.KEYBOARD_DID_OPEN=c;exports.copyVisualViewport=n;exports.keyboardDidClose=i;exports.keyboardDidOpen=y;exports.keyboardDidResize=b;exports.resetKeyboardAssist=g;exports.setKeyboardClose=d;exports.setKeyboardOpen=a;exports.startKeyboardAssist=O;exports.trackViewportChanges=D;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
