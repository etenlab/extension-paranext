"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const n=require("./crowd-bible-extension.web-view-7654aaa3.cjs");require("react");require("papi");/*!
 * (C) Ionic http://ionicframework.com - MIT License
 */const U=540,z=e=>document.querySelector(`${e}.ion-cloned-element`),x=e=>e.shadowRoot||e,M=e=>{const a=e.tagName==="ION-TABS"?e:e.querySelector("ion-tabs"),s="ion-content ion-header:not(.header-collapse-condense-inactive) ion-title.title-large";if(a!=null){const o=a.querySelector("ion-tab:not(.tab-hidden), .ion-page:not(.ion-page-hidden)");return o!=null?o.querySelector(s):null}return e.querySelector(s)},W=(e,a)=>{const s=e.tagName==="ION-TABS"?e:e.querySelector("ion-tabs");let o=[];if(s!=null){const t=s.querySelector("ion-tab:not(.tab-hidden), .ion-page:not(.ion-page-hidden)");t!=null&&(o=t.querySelectorAll("ion-buttons"))}else o=e.querySelectorAll("ion-buttons");for(const t of o){const c=t.closest("ion-header"),i=c&&!c.classList.contains("header-collapse-condense-inactive"),S=t.querySelector("ion-back-button"),l=t.classList.contains("buttons-collapse"),p=t.slot==="start"||t.slot==="";if(S!==null&&p&&(l&&i&&a||!l))return S}return null},j=(e,a,s,o,t)=>{const c=W(o,s),i=M(t),S=M(o),l=W(t,s),p=c!==null&&i!==null&&!s,u=S!==null&&l!==null&&s;if(p){const m=i.getBoundingClientRect(),d=c.getBoundingClientRect();D(e,a,s,i,m,d),G(e,a,s,c,m,d)}else if(u){const m=S.getBoundingClientRect(),d=l.getBoundingClientRect();D(e,a,s,S,m,d),G(e,a,s,l,m,d)}return{forward:p,backward:u}},G=(e,a,s,o,t,c)=>{const i=a?`calc(100% - ${c.right+4}px)`:`${c.left-4}px`,S=a?"7px":"-7px",l=a?"-4px":"4px",p=a?"-4px":"4px",u=a?"right":"left",m=a?"left":"right",d=[{offset:0,opacity:0,transform:`translate3d(${S}, ${t.top-40}px, 0) scale(2.1)`},{offset:1,opacity:1,transform:`translate3d(${l}, ${c.top-46}px, 0) scale(1)`}],g=[{offset:0,opacity:1,transform:`translate3d(${l}, ${c.top-46}px, 0) scale(1)`},{offset:.6,opacity:0},{offset:1,opacity:0,transform:`translate3d(${S}, ${t.top-40}px, 0) scale(2.1)`}],O=s?g:d,w=[{offset:0,opacity:0,transform:`translate3d(${p}, ${c.top-41}px, 0) scale(0.6)`},{offset:1,opacity:1,transform:`translate3d(${p}, ${c.top-46}px, 0) scale(1)`}],P=[{offset:0,opacity:1,transform:`translate3d(${p}, ${c.top-46}px, 0) scale(1)`},{offset:.2,opacity:0,transform:`translate3d(${p}, ${c.top-41}px, 0) scale(0.6)`},{offset:1,opacity:0,transform:`translate3d(${p}, ${c.top-41}px, 0) scale(0.6)`}],E=s?P:w,$=n.createAnimation(),B=n.createAnimation(),T=z("ion-back-button"),Y=x(T).querySelector(".button-text"),r=x(T).querySelector("ion-icon");T.text=o.text,T.mode=o.mode,T.icon=o.icon,T.color=o.color,T.disabled=o.disabled,T.style.setProperty("display","block"),T.style.setProperty("position","fixed"),B.addElement(r),$.addElement(Y),$.beforeStyles({"transform-origin":`${u} center`}).beforeAddWrite(()=>{o.style.setProperty("display","none"),T.style.setProperty(u,i)}).afterAddWrite(()=>{o.style.setProperty("display",""),T.style.setProperty("display","none"),T.style.removeProperty(u)}).keyframes(O),B.beforeStyles({"transform-origin":`${m} center`}).keyframes(E),e.addAnimation([$,B])},D=(e,a,s,o,t,c)=>{const i=a?`calc(100% - ${t.right}px)`:`${t.left}px`,S=a?"-18px":"18px",l=a?"right":"left",p=[{offset:0,opacity:0,transform:`translate3d(${S}, ${c.top-4}px, 0) scale(0.49)`},{offset:.1,opacity:0},{offset:1,opacity:1,transform:`translate3d(0, ${t.top-2}px, 0) scale(1)`}],u=[{offset:0,opacity:.99,transform:`translate3d(0, ${t.top-2}px, 0) scale(1)`},{offset:.6,opacity:0},{offset:1,opacity:0,transform:`translate3d(${S}, ${c.top-4}px, 0) scale(0.5)`}],m=s?p:u,d=z("ion-title"),g=n.createAnimation();d.innerText=o.innerText,d.size=o.size,d.color=o.color,g.addElement(d),g.beforeStyles({"transform-origin":`${l} center`,height:"46px",display:"",position:"relative",[l]:i}).beforeAddWrite(()=>{o.style.setProperty("display","none")}).afterAddWrite(()=>{o.style.setProperty("display",""),d.style.setProperty("display","none")}).keyframes(m),e.addAnimation(g)},V=(e,a)=>{var s;try{const o="cubic-bezier(0.32,0.72,0,1)",t="opacity",c="transform",i="0%",l=e.ownerDocument.dir==="rtl",p=l?"-99.5%":"99.5%",u=l?"33%":"-33%",m=a.enteringEl,d=a.leavingEl,g=a.direction==="back",O=m.querySelector(":scope > ion-content"),w=m.querySelectorAll(":scope > ion-header > *:not(ion-toolbar), :scope > ion-footer > *"),P=m.querySelectorAll(":scope > ion-header > ion-toolbar"),E=n.createAnimation(),$=n.createAnimation();if(E.addElement(m).duration(((s=a.duration)!==null&&s!==void 0?s:0)||U).easing(a.easing||o).fill("both").beforeRemoveClass("ion-page-invisible"),d&&e!==null&&e!==void 0){const r=n.createAnimation();r.addElement(e),E.addAnimation(r)}if(!O&&P.length===0&&w.length===0?$.addElement(m.querySelector(":scope > .ion-page, :scope > ion-nav, :scope > ion-tabs")):($.addElement(O),$.addElement(w)),E.addAnimation($),g?$.beforeClearStyles([t]).fromTo("transform",`translateX(${u})`,`translateX(${i})`).fromTo(t,.8,1):$.beforeClearStyles([t]).fromTo("transform",`translateX(${p})`,`translateX(${i})`),O){const r=x(O).querySelector(".transition-effect");if(r){const v=r.querySelector(".transition-cover"),R=r.querySelector(".transition-shadow"),h=n.createAnimation(),f=n.createAnimation(),y=n.createAnimation();h.addElement(r).beforeStyles({opacity:"1",display:"block"}).afterStyles({opacity:"",display:""}),f.addElement(v).beforeClearStyles([t]).fromTo(t,0,.1),y.addElement(R).beforeClearStyles([t]).fromTo(t,.03,.7),h.addAnimation([f,y]),$.addAnimation([h])}}const B=m.querySelector("ion-header.header-collapse-condense"),{forward:T,backward:Y}=j(E,l,g,m,d);if(P.forEach(r=>{const v=n.createAnimation();v.addElement(r),E.addAnimation(v);const R=n.createAnimation();R.addElement(r.querySelector("ion-title"));const h=n.createAnimation(),f=Array.from(r.querySelectorAll("ion-buttons,[menuToggle]")),y=r.closest("ion-header"),X=y==null?void 0:y.classList.contains("header-collapse-condense-inactive");let b;g?b=f.filter(q=>{const F=q.classList.contains("buttons-collapse");return F&&!X||!F}):b=f.filter(q=>!q.classList.contains("buttons-collapse")),h.addElement(b);const C=n.createAnimation();C.addElement(r.querySelectorAll(":scope > *:not(ion-title):not(ion-buttons):not([menuToggle])"));const A=n.createAnimation();A.addElement(x(r).querySelector(".toolbar-background"));const _=n.createAnimation(),I=r.querySelector("ion-back-button");if(I&&_.addElement(I),v.addAnimation([R,h,C,A,_]),h.fromTo(t,.01,1),C.fromTo(t,.01,1),g)X||R.fromTo("transform",`translateX(${u})`,`translateX(${i})`).fromTo(t,.01,1),C.fromTo("transform",`translateX(${u})`,`translateX(${i})`),_.fromTo(t,.01,1);else if(B||R.fromTo("transform",`translateX(${p})`,`translateX(${i})`).fromTo(t,.01,1),C.fromTo("transform",`translateX(${p})`,`translateX(${i})`),A.beforeClearStyles([t,"transform"]),(y==null?void 0:y.translucent)?A.fromTo("transform",l?"translateX(-100%)":"translateX(100%)","translateX(0px)"):A.fromTo(t,.01,"var(--opacity)"),T||_.fromTo(t,.01,1),I&&!T){const F=n.createAnimation();F.addElement(x(I).querySelector(".button-text")).fromTo("transform",l?"translateX(-100px)":"translateX(100px)","translateX(0px)"),v.addAnimation(F)}}),d){const r=n.createAnimation(),v=d.querySelector(":scope > ion-content"),R=d.querySelectorAll(":scope > ion-header > ion-toolbar"),h=d.querySelectorAll(":scope > ion-header > *:not(ion-toolbar), :scope > ion-footer > *");if(!v&&R.length===0&&h.length===0?r.addElement(d.querySelector(":scope > .ion-page, :scope > ion-nav, :scope > ion-tabs")):(r.addElement(v),r.addElement(h)),E.addAnimation(r),g){r.beforeClearStyles([t]).fromTo("transform",`translateX(${i})`,l?"translateX(-100%)":"translateX(100%)");const f=n.getIonPageElement(d);E.afterAddWrite(()=>{E.getDirection()==="normal"&&f.style.setProperty("display","none")})}else r.fromTo("transform",`translateX(${i})`,`translateX(${u})`).fromTo(t,1,.8);if(v){const f=x(v).querySelector(".transition-effect");if(f){const y=f.querySelector(".transition-cover"),X=f.querySelector(".transition-shadow"),b=n.createAnimation(),C=n.createAnimation(),A=n.createAnimation();b.addElement(f).beforeStyles({opacity:"1",display:"block"}).afterStyles({opacity:"",display:""}),C.addElement(y).beforeClearStyles([t]).fromTo(t,.1,0),A.addElement(X).beforeClearStyles([t]).fromTo(t,.7,.03),b.addAnimation([C,A]),r.addAnimation([b])}}R.forEach(f=>{const y=n.createAnimation();y.addElement(f);const X=n.createAnimation();X.addElement(f.querySelector("ion-title"));const b=n.createAnimation(),C=f.querySelectorAll("ion-buttons,[menuToggle]"),A=f.closest("ion-header"),_=A==null?void 0:A.classList.contains("header-collapse-condense-inactive"),I=Array.from(C).filter(k=>{const N=k.classList.contains("buttons-collapse");return N&&!_||!N});b.addElement(I);const q=n.createAnimation(),F=f.querySelectorAll(":scope > *:not(ion-title):not(ion-buttons):not([menuToggle])");F.length>0&&q.addElement(F);const L=n.createAnimation();L.addElement(x(f).querySelector(".toolbar-background"));const H=n.createAnimation(),K=f.querySelector("ion-back-button");if(K&&H.addElement(K),y.addAnimation([X,b,q,H,L]),E.addAnimation(y),H.fromTo(t,.99,0),b.fromTo(t,.99,0),q.fromTo(t,.99,0),g){if(_||X.fromTo("transform",`translateX(${i})`,l?"translateX(-100%)":"translateX(100%)").fromTo(t,.99,0),q.fromTo("transform",`translateX(${i})`,l?"translateX(-100%)":"translateX(100%)"),L.beforeClearStyles([t,"transform"]),(A==null?void 0:A.translucent)?L.fromTo("transform","translateX(0px)",l?"translateX(-100%)":"translateX(100%)"):L.fromTo(t,"var(--opacity)",0),K&&!Y){const N=n.createAnimation();N.addElement(x(K).querySelector(".button-text")).fromTo("transform",`translateX(${i})`,`translateX(${(l?-124:124)+"px"})`),y.addAnimation(N)}}else _||X.fromTo("transform",`translateX(${i})`,`translateX(${u})`).fromTo(t,.99,0).afterClearStyles([c,t]),q.fromTo("transform",`translateX(${i})`,`translateX(${u})`).afterClearStyles([c,t]),H.afterClearStyles([t]),X.afterClearStyles([t]),b.afterClearStyles([t])})}return E}catch(o){throw o}};exports.iosTransitionAnimation=V;exports.shadow=x;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW9zLnRyYW5zaXRpb24tMzVmYzg5MWEuY2pzIiwic291cmNlcyI6WyJub2RlX21vZHVsZXMvQGlvbmljL2NvcmUvY29tcG9uZW50cy9pb3MudHJhbnNpdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIChDKSBJb25pYyBodHRwOi8vaW9uaWNmcmFtZXdvcmsuY29tIC0gTUlUIExpY2Vuc2VcbiAqL1xuaW1wb3J0IHsgYyBhcyBjcmVhdGVBbmltYXRpb24gfSBmcm9tICcuL2FuaW1hdGlvbi5qcyc7XG5pbXBvcnQgeyBnIGFzIGdldElvblBhZ2VFbGVtZW50IH0gZnJvbSAnLi9pbmRleDMuanMnO1xuXG5jb25zdCBEVVJBVElPTiA9IDU0MDtcbi8vIFRPRE8oRlctMjgzMik6IHR5cGVzXG5jb25zdCBnZXRDbG9uZWRFbGVtZW50ID0gKHRhZ05hbWUpID0+IHtcbiAgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCR7dGFnTmFtZX0uaW9uLWNsb25lZC1lbGVtZW50YCk7XG59O1xuY29uc3Qgc2hhZG93ID0gKGVsKSA9PiB7XG4gIHJldHVybiBlbC5zaGFkb3dSb290IHx8IGVsO1xufTtcbmNvbnN0IGdldExhcmdlVGl0bGUgPSAocmVmRWwpID0+IHtcbiAgY29uc3QgdGFicyA9IHJlZkVsLnRhZ05hbWUgPT09ICdJT04tVEFCUycgPyByZWZFbCA6IHJlZkVsLnF1ZXJ5U2VsZWN0b3IoJ2lvbi10YWJzJyk7XG4gIGNvbnN0IHF1ZXJ5ID0gJ2lvbi1jb250ZW50IGlvbi1oZWFkZXI6bm90KC5oZWFkZXItY29sbGFwc2UtY29uZGVuc2UtaW5hY3RpdmUpIGlvbi10aXRsZS50aXRsZS1sYXJnZSc7XG4gIGlmICh0YWJzICE9IG51bGwpIHtcbiAgICBjb25zdCBhY3RpdmVUYWIgPSB0YWJzLnF1ZXJ5U2VsZWN0b3IoJ2lvbi10YWI6bm90KC50YWItaGlkZGVuKSwgLmlvbi1wYWdlOm5vdCguaW9uLXBhZ2UtaGlkZGVuKScpO1xuICAgIHJldHVybiBhY3RpdmVUYWIgIT0gbnVsbCA/IGFjdGl2ZVRhYi5xdWVyeVNlbGVjdG9yKHF1ZXJ5KSA6IG51bGw7XG4gIH1cbiAgcmV0dXJuIHJlZkVsLnF1ZXJ5U2VsZWN0b3IocXVlcnkpO1xufTtcbmNvbnN0IGdldEJhY2tCdXR0b24gPSAocmVmRWwsIGJhY2tEaXJlY3Rpb24pID0+IHtcbiAgY29uc3QgdGFicyA9IHJlZkVsLnRhZ05hbWUgPT09ICdJT04tVEFCUycgPyByZWZFbCA6IHJlZkVsLnF1ZXJ5U2VsZWN0b3IoJ2lvbi10YWJzJyk7XG4gIGxldCBidXR0b25zTGlzdCA9IFtdO1xuICBpZiAodGFicyAhPSBudWxsKSB7XG4gICAgY29uc3QgYWN0aXZlVGFiID0gdGFicy5xdWVyeVNlbGVjdG9yKCdpb24tdGFiOm5vdCgudGFiLWhpZGRlbiksIC5pb24tcGFnZTpub3QoLmlvbi1wYWdlLWhpZGRlbiknKTtcbiAgICBpZiAoYWN0aXZlVGFiICE9IG51bGwpIHtcbiAgICAgIGJ1dHRvbnNMaXN0ID0gYWN0aXZlVGFiLnF1ZXJ5U2VsZWN0b3JBbGwoJ2lvbi1idXR0b25zJyk7XG4gICAgfVxuICB9XG4gIGVsc2Uge1xuICAgIGJ1dHRvbnNMaXN0ID0gcmVmRWwucXVlcnlTZWxlY3RvckFsbCgnaW9uLWJ1dHRvbnMnKTtcbiAgfVxuICBmb3IgKGNvbnN0IGJ1dHRvbnMgb2YgYnV0dG9uc0xpc3QpIHtcbiAgICBjb25zdCBwYXJlbnRIZWFkZXIgPSBidXR0b25zLmNsb3Nlc3QoJ2lvbi1oZWFkZXInKTtcbiAgICBjb25zdCBhY3RpdmVIZWFkZXIgPSBwYXJlbnRIZWFkZXIgJiYgIXBhcmVudEhlYWRlci5jbGFzc0xpc3QuY29udGFpbnMoJ2hlYWRlci1jb2xsYXBzZS1jb25kZW5zZS1pbmFjdGl2ZScpO1xuICAgIGNvbnN0IGJhY2tCdXR0b24gPSBidXR0b25zLnF1ZXJ5U2VsZWN0b3IoJ2lvbi1iYWNrLWJ1dHRvbicpO1xuICAgIGNvbnN0IGJ1dHRvbnNDb2xsYXBzZSA9IGJ1dHRvbnMuY2xhc3NMaXN0LmNvbnRhaW5zKCdidXR0b25zLWNvbGxhcHNlJyk7XG4gICAgY29uc3Qgc3RhcnRTbG90ID0gYnV0dG9ucy5zbG90ID09PSAnc3RhcnQnIHx8IGJ1dHRvbnMuc2xvdCA9PT0gJyc7XG4gICAgaWYgKGJhY2tCdXR0b24gIT09IG51bGwgJiYgc3RhcnRTbG90ICYmICgoYnV0dG9uc0NvbGxhcHNlICYmIGFjdGl2ZUhlYWRlciAmJiBiYWNrRGlyZWN0aW9uKSB8fCAhYnV0dG9uc0NvbGxhcHNlKSkge1xuICAgICAgcmV0dXJuIGJhY2tCdXR0b247XG4gICAgfVxuICB9XG4gIHJldHVybiBudWxsO1xufTtcbmNvbnN0IGNyZWF0ZUxhcmdlVGl0bGVUcmFuc2l0aW9uID0gKHJvb3RBbmltYXRpb24sIHJ0bCwgYmFja0RpcmVjdGlvbiwgZW50ZXJpbmdFbCwgbGVhdmluZ0VsKSA9PiB7XG4gIGNvbnN0IGVudGVyaW5nQmFja0J1dHRvbiA9IGdldEJhY2tCdXR0b24oZW50ZXJpbmdFbCwgYmFja0RpcmVjdGlvbik7XG4gIGNvbnN0IGxlYXZpbmdMYXJnZVRpdGxlID0gZ2V0TGFyZ2VUaXRsZShsZWF2aW5nRWwpO1xuICBjb25zdCBlbnRlcmluZ0xhcmdlVGl0bGUgPSBnZXRMYXJnZVRpdGxlKGVudGVyaW5nRWwpO1xuICBjb25zdCBsZWF2aW5nQmFja0J1dHRvbiA9IGdldEJhY2tCdXR0b24obGVhdmluZ0VsLCBiYWNrRGlyZWN0aW9uKTtcbiAgY29uc3Qgc2hvdWxkQW5pbWF0aW9uRm9yd2FyZCA9IGVudGVyaW5nQmFja0J1dHRvbiAhPT0gbnVsbCAmJiBsZWF2aW5nTGFyZ2VUaXRsZSAhPT0gbnVsbCAmJiAhYmFja0RpcmVjdGlvbjtcbiAgY29uc3Qgc2hvdWxkQW5pbWF0aW9uQmFja3dhcmQgPSBlbnRlcmluZ0xhcmdlVGl0bGUgIT09IG51bGwgJiYgbGVhdmluZ0JhY2tCdXR0b24gIT09IG51bGwgJiYgYmFja0RpcmVjdGlvbjtcbiAgaWYgKHNob3VsZEFuaW1hdGlvbkZvcndhcmQpIHtcbiAgICBjb25zdCBsZWF2aW5nTGFyZ2VUaXRsZUJveCA9IGxlYXZpbmdMYXJnZVRpdGxlLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIGNvbnN0IGVudGVyaW5nQmFja0J1dHRvbkJveCA9IGVudGVyaW5nQmFja0J1dHRvbi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICBhbmltYXRlTGFyZ2VUaXRsZShyb290QW5pbWF0aW9uLCBydGwsIGJhY2tEaXJlY3Rpb24sIGxlYXZpbmdMYXJnZVRpdGxlLCBsZWF2aW5nTGFyZ2VUaXRsZUJveCwgZW50ZXJpbmdCYWNrQnV0dG9uQm94KTtcbiAgICBhbmltYXRlQmFja0J1dHRvbihyb290QW5pbWF0aW9uLCBydGwsIGJhY2tEaXJlY3Rpb24sIGVudGVyaW5nQmFja0J1dHRvbiwgbGVhdmluZ0xhcmdlVGl0bGVCb3gsIGVudGVyaW5nQmFja0J1dHRvbkJveCk7XG4gIH1cbiAgZWxzZSBpZiAoc2hvdWxkQW5pbWF0aW9uQmFja3dhcmQpIHtcbiAgICBjb25zdCBlbnRlcmluZ0xhcmdlVGl0bGVCb3ggPSBlbnRlcmluZ0xhcmdlVGl0bGUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgY29uc3QgbGVhdmluZ0JhY2tCdXR0b25Cb3ggPSBsZWF2aW5nQmFja0J1dHRvbi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICBhbmltYXRlTGFyZ2VUaXRsZShyb290QW5pbWF0aW9uLCBydGwsIGJhY2tEaXJlY3Rpb24sIGVudGVyaW5nTGFyZ2VUaXRsZSwgZW50ZXJpbmdMYXJnZVRpdGxlQm94LCBsZWF2aW5nQmFja0J1dHRvbkJveCk7XG4gICAgYW5pbWF0ZUJhY2tCdXR0b24ocm9vdEFuaW1hdGlvbiwgcnRsLCBiYWNrRGlyZWN0aW9uLCBsZWF2aW5nQmFja0J1dHRvbiwgZW50ZXJpbmdMYXJnZVRpdGxlQm94LCBsZWF2aW5nQmFja0J1dHRvbkJveCk7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBmb3J3YXJkOiBzaG91bGRBbmltYXRpb25Gb3J3YXJkLFxuICAgIGJhY2t3YXJkOiBzaG91bGRBbmltYXRpb25CYWNrd2FyZCxcbiAgfTtcbn07XG5jb25zdCBhbmltYXRlQmFja0J1dHRvbiA9IChyb290QW5pbWF0aW9uLCBydGwsIGJhY2tEaXJlY3Rpb24sIGJhY2tCdXR0b25FbCwgbGFyZ2VUaXRsZUJveCwgYmFja0J1dHRvbkJveCkgPT4ge1xuICBjb25zdCBCQUNLX0JVVFRPTl9TVEFSVF9PRkZTRVQgPSBydGwgPyBgY2FsYygxMDAlIC0gJHtiYWNrQnV0dG9uQm94LnJpZ2h0ICsgNH1weClgIDogYCR7YmFja0J1dHRvbkJveC5sZWZ0IC0gNH1weGA7XG4gIGNvbnN0IFNUQVJUX1RFWFRfVFJBTlNMQVRFID0gcnRsID8gJzdweCcgOiAnLTdweCc7XG4gIGNvbnN0IEVORF9URVhUX1RSQU5TTEFURSA9IHJ0bCA/ICctNHB4JyA6ICc0cHgnO1xuICBjb25zdCBJQ09OX1RSQU5TTEFURSA9IHJ0bCA/ICctNHB4JyA6ICc0cHgnO1xuICBjb25zdCBURVhUX09SSUdJTl9YID0gcnRsID8gJ3JpZ2h0JyA6ICdsZWZ0JztcbiAgY29uc3QgSUNPTl9PUklHSU5fWCA9IHJ0bCA/ICdsZWZ0JyA6ICdyaWdodCc7XG4gIGNvbnN0IEZPUldBUkRfVEVYVF9LRVlGUkFNRVMgPSBbXG4gICAge1xuICAgICAgb2Zmc2V0OiAwLFxuICAgICAgb3BhY2l0eTogMCxcbiAgICAgIHRyYW5zZm9ybTogYHRyYW5zbGF0ZTNkKCR7U1RBUlRfVEVYVF9UUkFOU0xBVEV9LCAke2xhcmdlVGl0bGVCb3gudG9wIC0gNDB9cHgsIDApIHNjYWxlKDIuMSlgLFxuICAgIH0sXG4gICAgeyBvZmZzZXQ6IDEsIG9wYWNpdHk6IDEsIHRyYW5zZm9ybTogYHRyYW5zbGF0ZTNkKCR7RU5EX1RFWFRfVFJBTlNMQVRFfSwgJHtiYWNrQnV0dG9uQm94LnRvcCAtIDQ2fXB4LCAwKSBzY2FsZSgxKWAgfSxcbiAgXTtcbiAgY29uc3QgQkFDS1dBUkRfVEVYVF9LRVlGUkFNRVMgPSBbXG4gICAgeyBvZmZzZXQ6IDAsIG9wYWNpdHk6IDEsIHRyYW5zZm9ybTogYHRyYW5zbGF0ZTNkKCR7RU5EX1RFWFRfVFJBTlNMQVRFfSwgJHtiYWNrQnV0dG9uQm94LnRvcCAtIDQ2fXB4LCAwKSBzY2FsZSgxKWAgfSxcbiAgICB7IG9mZnNldDogMC42LCBvcGFjaXR5OiAwIH0sXG4gICAge1xuICAgICAgb2Zmc2V0OiAxLFxuICAgICAgb3BhY2l0eTogMCxcbiAgICAgIHRyYW5zZm9ybTogYHRyYW5zbGF0ZTNkKCR7U1RBUlRfVEVYVF9UUkFOU0xBVEV9LCAke2xhcmdlVGl0bGVCb3gudG9wIC0gNDB9cHgsIDApIHNjYWxlKDIuMSlgLFxuICAgIH0sXG4gIF07XG4gIGNvbnN0IFRFWFRfS0VZRlJBTUVTID0gYmFja0RpcmVjdGlvbiA/IEJBQ0tXQVJEX1RFWFRfS0VZRlJBTUVTIDogRk9SV0FSRF9URVhUX0tFWUZSQU1FUztcbiAgY29uc3QgRk9SV0FSRF9JQ09OX0tFWUZSQU1FUyA9IFtcbiAgICB7IG9mZnNldDogMCwgb3BhY2l0eTogMCwgdHJhbnNmb3JtOiBgdHJhbnNsYXRlM2QoJHtJQ09OX1RSQU5TTEFURX0sICR7YmFja0J1dHRvbkJveC50b3AgLSA0MX1weCwgMCkgc2NhbGUoMC42KWAgfSxcbiAgICB7IG9mZnNldDogMSwgb3BhY2l0eTogMSwgdHJhbnNmb3JtOiBgdHJhbnNsYXRlM2QoJHtJQ09OX1RSQU5TTEFURX0sICR7YmFja0J1dHRvbkJveC50b3AgLSA0Nn1weCwgMCkgc2NhbGUoMSlgIH0sXG4gIF07XG4gIGNvbnN0IEJBQ0tXQVJEX0lDT05fS0VZRlJBTUVTID0gW1xuICAgIHsgb2Zmc2V0OiAwLCBvcGFjaXR5OiAxLCB0cmFuc2Zvcm06IGB0cmFuc2xhdGUzZCgke0lDT05fVFJBTlNMQVRFfSwgJHtiYWNrQnV0dG9uQm94LnRvcCAtIDQ2fXB4LCAwKSBzY2FsZSgxKWAgfSxcbiAgICB7IG9mZnNldDogMC4yLCBvcGFjaXR5OiAwLCB0cmFuc2Zvcm06IGB0cmFuc2xhdGUzZCgke0lDT05fVFJBTlNMQVRFfSwgJHtiYWNrQnV0dG9uQm94LnRvcCAtIDQxfXB4LCAwKSBzY2FsZSgwLjYpYCB9LFxuICAgIHsgb2Zmc2V0OiAxLCBvcGFjaXR5OiAwLCB0cmFuc2Zvcm06IGB0cmFuc2xhdGUzZCgke0lDT05fVFJBTlNMQVRFfSwgJHtiYWNrQnV0dG9uQm94LnRvcCAtIDQxfXB4LCAwKSBzY2FsZSgwLjYpYCB9LFxuICBdO1xuICBjb25zdCBJQ09OX0tFWUZSQU1FUyA9IGJhY2tEaXJlY3Rpb24gPyBCQUNLV0FSRF9JQ09OX0tFWUZSQU1FUyA6IEZPUldBUkRfSUNPTl9LRVlGUkFNRVM7XG4gIGNvbnN0IGVudGVyaW5nQmFja0J1dHRvblRleHRBbmltYXRpb24gPSBjcmVhdGVBbmltYXRpb24oKTtcbiAgY29uc3QgZW50ZXJpbmdCYWNrQnV0dG9uSWNvbkFuaW1hdGlvbiA9IGNyZWF0ZUFuaW1hdGlvbigpO1xuICBjb25zdCBjbG9uZWRCYWNrQnV0dG9uRWwgPSBnZXRDbG9uZWRFbGVtZW50KCdpb24tYmFjay1idXR0b24nKTtcbiAgY29uc3QgYmFja0J1dHRvblRleHRFbCA9IHNoYWRvdyhjbG9uZWRCYWNrQnV0dG9uRWwpLnF1ZXJ5U2VsZWN0b3IoJy5idXR0b24tdGV4dCcpO1xuICBjb25zdCBiYWNrQnV0dG9uSWNvbkVsID0gc2hhZG93KGNsb25lZEJhY2tCdXR0b25FbCkucXVlcnlTZWxlY3RvcignaW9uLWljb24nKTtcbiAgY2xvbmVkQmFja0J1dHRvbkVsLnRleHQgPSBiYWNrQnV0dG9uRWwudGV4dDtcbiAgY2xvbmVkQmFja0J1dHRvbkVsLm1vZGUgPSBiYWNrQnV0dG9uRWwubW9kZTtcbiAgY2xvbmVkQmFja0J1dHRvbkVsLmljb24gPSBiYWNrQnV0dG9uRWwuaWNvbjtcbiAgY2xvbmVkQmFja0J1dHRvbkVsLmNvbG9yID0gYmFja0J1dHRvbkVsLmNvbG9yO1xuICBjbG9uZWRCYWNrQnV0dG9uRWwuZGlzYWJsZWQgPSBiYWNrQnV0dG9uRWwuZGlzYWJsZWQ7XG4gIGNsb25lZEJhY2tCdXR0b25FbC5zdHlsZS5zZXRQcm9wZXJ0eSgnZGlzcGxheScsICdibG9jaycpO1xuICBjbG9uZWRCYWNrQnV0dG9uRWwuc3R5bGUuc2V0UHJvcGVydHkoJ3Bvc2l0aW9uJywgJ2ZpeGVkJyk7XG4gIGVudGVyaW5nQmFja0J1dHRvbkljb25BbmltYXRpb24uYWRkRWxlbWVudChiYWNrQnV0dG9uSWNvbkVsKTtcbiAgZW50ZXJpbmdCYWNrQnV0dG9uVGV4dEFuaW1hdGlvbi5hZGRFbGVtZW50KGJhY2tCdXR0b25UZXh0RWwpO1xuICBlbnRlcmluZ0JhY2tCdXR0b25UZXh0QW5pbWF0aW9uXG4gICAgLmJlZm9yZVN0eWxlcyh7XG4gICAgJ3RyYW5zZm9ybS1vcmlnaW4nOiBgJHtURVhUX09SSUdJTl9YfSBjZW50ZXJgLFxuICB9KVxuICAgIC5iZWZvcmVBZGRXcml0ZSgoKSA9PiB7XG4gICAgYmFja0J1dHRvbkVsLnN0eWxlLnNldFByb3BlcnR5KCdkaXNwbGF5JywgJ25vbmUnKTtcbiAgICBjbG9uZWRCYWNrQnV0dG9uRWwuc3R5bGUuc2V0UHJvcGVydHkoVEVYVF9PUklHSU5fWCwgQkFDS19CVVRUT05fU1RBUlRfT0ZGU0VUKTtcbiAgfSlcbiAgICAuYWZ0ZXJBZGRXcml0ZSgoKSA9PiB7XG4gICAgYmFja0J1dHRvbkVsLnN0eWxlLnNldFByb3BlcnR5KCdkaXNwbGF5JywgJycpO1xuICAgIGNsb25lZEJhY2tCdXR0b25FbC5zdHlsZS5zZXRQcm9wZXJ0eSgnZGlzcGxheScsICdub25lJyk7XG4gICAgY2xvbmVkQmFja0J1dHRvbkVsLnN0eWxlLnJlbW92ZVByb3BlcnR5KFRFWFRfT1JJR0lOX1gpO1xuICB9KVxuICAgIC5rZXlmcmFtZXMoVEVYVF9LRVlGUkFNRVMpO1xuICBlbnRlcmluZ0JhY2tCdXR0b25JY29uQW5pbWF0aW9uXG4gICAgLmJlZm9yZVN0eWxlcyh7XG4gICAgJ3RyYW5zZm9ybS1vcmlnaW4nOiBgJHtJQ09OX09SSUdJTl9YfSBjZW50ZXJgLFxuICB9KVxuICAgIC5rZXlmcmFtZXMoSUNPTl9LRVlGUkFNRVMpO1xuICByb290QW5pbWF0aW9uLmFkZEFuaW1hdGlvbihbZW50ZXJpbmdCYWNrQnV0dG9uVGV4dEFuaW1hdGlvbiwgZW50ZXJpbmdCYWNrQnV0dG9uSWNvbkFuaW1hdGlvbl0pO1xufTtcbmNvbnN0IGFuaW1hdGVMYXJnZVRpdGxlID0gKHJvb3RBbmltYXRpb24sIHJ0bCwgYmFja0RpcmVjdGlvbiwgbGFyZ2VUaXRsZUVsLCBsYXJnZVRpdGxlQm94LCBiYWNrQnV0dG9uQm94KSA9PiB7XG4gIGNvbnN0IFRJVExFX1NUQVJUX09GRlNFVCA9IHJ0bCA/IGBjYWxjKDEwMCUgLSAke2xhcmdlVGl0bGVCb3gucmlnaHR9cHgpYCA6IGAke2xhcmdlVGl0bGVCb3gubGVmdH1weGA7XG4gIGNvbnN0IFNUQVJUX1RSQU5TTEFURSA9IHJ0bCA/ICctMThweCcgOiAnMThweCc7XG4gIGNvbnN0IE9SSUdJTl9YID0gcnRsID8gJ3JpZ2h0JyA6ICdsZWZ0JztcbiAgY29uc3QgQkFDS1dBUkRTX0tFWUZSQU1FUyA9IFtcbiAgICB7IG9mZnNldDogMCwgb3BhY2l0eTogMCwgdHJhbnNmb3JtOiBgdHJhbnNsYXRlM2QoJHtTVEFSVF9UUkFOU0xBVEV9LCAke2JhY2tCdXR0b25Cb3gudG9wIC0gNH1weCwgMCkgc2NhbGUoMC40OSlgIH0sXG4gICAgeyBvZmZzZXQ6IDAuMSwgb3BhY2l0eTogMCB9LFxuICAgIHsgb2Zmc2V0OiAxLCBvcGFjaXR5OiAxLCB0cmFuc2Zvcm06IGB0cmFuc2xhdGUzZCgwLCAke2xhcmdlVGl0bGVCb3gudG9wIC0gMn1weCwgMCkgc2NhbGUoMSlgIH0sXG4gIF07XG4gIGNvbnN0IEZPUldBUkRTX0tFWUZSQU1FUyA9IFtcbiAgICB7IG9mZnNldDogMCwgb3BhY2l0eTogMC45OSwgdHJhbnNmb3JtOiBgdHJhbnNsYXRlM2QoMCwgJHtsYXJnZVRpdGxlQm94LnRvcCAtIDJ9cHgsIDApIHNjYWxlKDEpYCB9LFxuICAgIHsgb2Zmc2V0OiAwLjYsIG9wYWNpdHk6IDAgfSxcbiAgICB7IG9mZnNldDogMSwgb3BhY2l0eTogMCwgdHJhbnNmb3JtOiBgdHJhbnNsYXRlM2QoJHtTVEFSVF9UUkFOU0xBVEV9LCAke2JhY2tCdXR0b25Cb3gudG9wIC0gNH1weCwgMCkgc2NhbGUoMC41KWAgfSxcbiAgXTtcbiAgY29uc3QgS0VZRlJBTUVTID0gYmFja0RpcmVjdGlvbiA/IEJBQ0tXQVJEU19LRVlGUkFNRVMgOiBGT1JXQVJEU19LRVlGUkFNRVM7XG4gIGNvbnN0IGNsb25lZFRpdGxlRWwgPSBnZXRDbG9uZWRFbGVtZW50KCdpb24tdGl0bGUnKTtcbiAgY29uc3QgY2xvbmVkTGFyZ2VUaXRsZUFuaW1hdGlvbiA9IGNyZWF0ZUFuaW1hdGlvbigpO1xuICBjbG9uZWRUaXRsZUVsLmlubmVyVGV4dCA9IGxhcmdlVGl0bGVFbC5pbm5lclRleHQ7XG4gIGNsb25lZFRpdGxlRWwuc2l6ZSA9IGxhcmdlVGl0bGVFbC5zaXplO1xuICBjbG9uZWRUaXRsZUVsLmNvbG9yID0gbGFyZ2VUaXRsZUVsLmNvbG9yO1xuICBjbG9uZWRMYXJnZVRpdGxlQW5pbWF0aW9uLmFkZEVsZW1lbnQoY2xvbmVkVGl0bGVFbCk7XG4gIGNsb25lZExhcmdlVGl0bGVBbmltYXRpb25cbiAgICAuYmVmb3JlU3R5bGVzKHtcbiAgICAndHJhbnNmb3JtLW9yaWdpbic6IGAke09SSUdJTl9YfSBjZW50ZXJgLFxuICAgIGhlaWdodDogJzQ2cHgnLFxuICAgIGRpc3BsYXk6ICcnLFxuICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgIFtPUklHSU5fWF06IFRJVExFX1NUQVJUX09GRlNFVCxcbiAgfSlcbiAgICAuYmVmb3JlQWRkV3JpdGUoKCkgPT4ge1xuICAgIGxhcmdlVGl0bGVFbC5zdHlsZS5zZXRQcm9wZXJ0eSgnZGlzcGxheScsICdub25lJyk7XG4gIH0pXG4gICAgLmFmdGVyQWRkV3JpdGUoKCkgPT4ge1xuICAgIGxhcmdlVGl0bGVFbC5zdHlsZS5zZXRQcm9wZXJ0eSgnZGlzcGxheScsICcnKTtcbiAgICBjbG9uZWRUaXRsZUVsLnN0eWxlLnNldFByb3BlcnR5KCdkaXNwbGF5JywgJ25vbmUnKTtcbiAgfSlcbiAgICAua2V5ZnJhbWVzKEtFWUZSQU1FUyk7XG4gIHJvb3RBbmltYXRpb24uYWRkQW5pbWF0aW9uKGNsb25lZExhcmdlVGl0bGVBbmltYXRpb24pO1xufTtcbmNvbnN0IGlvc1RyYW5zaXRpb25BbmltYXRpb24gPSAobmF2RWwsIG9wdHMpID0+IHtcbiAgdmFyIF9hO1xuICB0cnkge1xuICAgIGNvbnN0IEVBU0lORyA9ICdjdWJpYy1iZXppZXIoMC4zMiwwLjcyLDAsMSknO1xuICAgIGNvbnN0IE9QQUNJVFkgPSAnb3BhY2l0eSc7XG4gICAgY29uc3QgVFJBTlNGT1JNID0gJ3RyYW5zZm9ybSc7XG4gICAgY29uc3QgQ0VOVEVSID0gJzAlJztcbiAgICBjb25zdCBPRkZfT1BBQ0lUWSA9IDAuODtcbiAgICBjb25zdCBpc1JUTCA9IG5hdkVsLm93bmVyRG9jdW1lbnQuZGlyID09PSAncnRsJztcbiAgICBjb25zdCBPRkZfUklHSFQgPSBpc1JUTCA/ICctOTkuNSUnIDogJzk5LjUlJztcbiAgICBjb25zdCBPRkZfTEVGVCA9IGlzUlRMID8gJzMzJScgOiAnLTMzJSc7XG4gICAgY29uc3QgZW50ZXJpbmdFbCA9IG9wdHMuZW50ZXJpbmdFbDtcbiAgICBjb25zdCBsZWF2aW5nRWwgPSBvcHRzLmxlYXZpbmdFbDtcbiAgICBjb25zdCBiYWNrRGlyZWN0aW9uID0gb3B0cy5kaXJlY3Rpb24gPT09ICdiYWNrJztcbiAgICBjb25zdCBjb250ZW50RWwgPSBlbnRlcmluZ0VsLnF1ZXJ5U2VsZWN0b3IoJzpzY29wZSA+IGlvbi1jb250ZW50Jyk7XG4gICAgY29uc3QgaGVhZGVyRWxzID0gZW50ZXJpbmdFbC5xdWVyeVNlbGVjdG9yQWxsKCc6c2NvcGUgPiBpb24taGVhZGVyID4gKjpub3QoaW9uLXRvb2xiYXIpLCA6c2NvcGUgPiBpb24tZm9vdGVyID4gKicpO1xuICAgIGNvbnN0IGVudGVyaW5nVG9vbEJhckVscyA9IGVudGVyaW5nRWwucXVlcnlTZWxlY3RvckFsbCgnOnNjb3BlID4gaW9uLWhlYWRlciA+IGlvbi10b29sYmFyJyk7XG4gICAgY29uc3Qgcm9vdEFuaW1hdGlvbiA9IGNyZWF0ZUFuaW1hdGlvbigpO1xuICAgIGNvbnN0IGVudGVyaW5nQ29udGVudEFuaW1hdGlvbiA9IGNyZWF0ZUFuaW1hdGlvbigpO1xuICAgIHJvb3RBbmltYXRpb25cbiAgICAgIC5hZGRFbGVtZW50KGVudGVyaW5nRWwpXG4gICAgICAuZHVyYXRpb24oKChfYSA9IG9wdHMuZHVyYXRpb24pICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IDApIHx8IERVUkFUSU9OKVxuICAgICAgLmVhc2luZyhvcHRzLmVhc2luZyB8fCBFQVNJTkcpXG4gICAgICAuZmlsbCgnYm90aCcpXG4gICAgICAuYmVmb3JlUmVtb3ZlQ2xhc3MoJ2lvbi1wYWdlLWludmlzaWJsZScpO1xuICAgIGlmIChsZWF2aW5nRWwgJiYgbmF2RWwgIT09IG51bGwgJiYgbmF2RWwgIT09IHVuZGVmaW5lZCkge1xuICAgICAgY29uc3QgbmF2RGVjb3JBbmltYXRpb24gPSBjcmVhdGVBbmltYXRpb24oKTtcbiAgICAgIG5hdkRlY29yQW5pbWF0aW9uLmFkZEVsZW1lbnQobmF2RWwpO1xuICAgICAgcm9vdEFuaW1hdGlvbi5hZGRBbmltYXRpb24obmF2RGVjb3JBbmltYXRpb24pO1xuICAgIH1cbiAgICBpZiAoIWNvbnRlbnRFbCAmJiBlbnRlcmluZ1Rvb2xCYXJFbHMubGVuZ3RoID09PSAwICYmIGhlYWRlckVscy5sZW5ndGggPT09IDApIHtcbiAgICAgIGVudGVyaW5nQ29udGVudEFuaW1hdGlvbi5hZGRFbGVtZW50KGVudGVyaW5nRWwucXVlcnlTZWxlY3RvcignOnNjb3BlID4gLmlvbi1wYWdlLCA6c2NvcGUgPiBpb24tbmF2LCA6c2NvcGUgPiBpb24tdGFicycpKTsgLy8gUkVWSUVXXG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgZW50ZXJpbmdDb250ZW50QW5pbWF0aW9uLmFkZEVsZW1lbnQoY29udGVudEVsKTsgLy8gUkVWSUVXXG4gICAgICBlbnRlcmluZ0NvbnRlbnRBbmltYXRpb24uYWRkRWxlbWVudChoZWFkZXJFbHMpO1xuICAgIH1cbiAgICByb290QW5pbWF0aW9uLmFkZEFuaW1hdGlvbihlbnRlcmluZ0NvbnRlbnRBbmltYXRpb24pO1xuICAgIGlmIChiYWNrRGlyZWN0aW9uKSB7XG4gICAgICBlbnRlcmluZ0NvbnRlbnRBbmltYXRpb25cbiAgICAgICAgLmJlZm9yZUNsZWFyU3R5bGVzKFtPUEFDSVRZXSlcbiAgICAgICAgLmZyb21UbygndHJhbnNmb3JtJywgYHRyYW5zbGF0ZVgoJHtPRkZfTEVGVH0pYCwgYHRyYW5zbGF0ZVgoJHtDRU5URVJ9KWApXG4gICAgICAgIC5mcm9tVG8oT1BBQ0lUWSwgT0ZGX09QQUNJVFksIDEpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIC8vIGVudGVyaW5nIGNvbnRlbnQsIGZvcndhcmQgZGlyZWN0aW9uXG4gICAgICBlbnRlcmluZ0NvbnRlbnRBbmltYXRpb25cbiAgICAgICAgLmJlZm9yZUNsZWFyU3R5bGVzKFtPUEFDSVRZXSlcbiAgICAgICAgLmZyb21UbygndHJhbnNmb3JtJywgYHRyYW5zbGF0ZVgoJHtPRkZfUklHSFR9KWAsIGB0cmFuc2xhdGVYKCR7Q0VOVEVSfSlgKTtcbiAgICB9XG4gICAgaWYgKGNvbnRlbnRFbCkge1xuICAgICAgY29uc3QgZW50ZXJpbmdUcmFuc2l0aW9uRWZmZWN0RWwgPSBzaGFkb3coY29udGVudEVsKS5xdWVyeVNlbGVjdG9yKCcudHJhbnNpdGlvbi1lZmZlY3QnKTtcbiAgICAgIGlmIChlbnRlcmluZ1RyYW5zaXRpb25FZmZlY3RFbCkge1xuICAgICAgICBjb25zdCBlbnRlcmluZ1RyYW5zaXRpb25Db3ZlckVsID0gZW50ZXJpbmdUcmFuc2l0aW9uRWZmZWN0RWwucXVlcnlTZWxlY3RvcignLnRyYW5zaXRpb24tY292ZXInKTtcbiAgICAgICAgY29uc3QgZW50ZXJpbmdUcmFuc2l0aW9uU2hhZG93RWwgPSBlbnRlcmluZ1RyYW5zaXRpb25FZmZlY3RFbC5xdWVyeVNlbGVjdG9yKCcudHJhbnNpdGlvbi1zaGFkb3cnKTtcbiAgICAgICAgY29uc3QgZW50ZXJpbmdUcmFuc2l0aW9uRWZmZWN0ID0gY3JlYXRlQW5pbWF0aW9uKCk7XG4gICAgICAgIGNvbnN0IGVudGVyaW5nVHJhbnNpdGlvbkNvdmVyID0gY3JlYXRlQW5pbWF0aW9uKCk7XG4gICAgICAgIGNvbnN0IGVudGVyaW5nVHJhbnNpdGlvblNoYWRvdyA9IGNyZWF0ZUFuaW1hdGlvbigpO1xuICAgICAgICBlbnRlcmluZ1RyYW5zaXRpb25FZmZlY3RcbiAgICAgICAgICAuYWRkRWxlbWVudChlbnRlcmluZ1RyYW5zaXRpb25FZmZlY3RFbClcbiAgICAgICAgICAuYmVmb3JlU3R5bGVzKHsgb3BhY2l0eTogJzEnLCBkaXNwbGF5OiAnYmxvY2snIH0pXG4gICAgICAgICAgLmFmdGVyU3R5bGVzKHsgb3BhY2l0eTogJycsIGRpc3BsYXk6ICcnIH0pO1xuICAgICAgICBlbnRlcmluZ1RyYW5zaXRpb25Db3ZlclxuICAgICAgICAgIC5hZGRFbGVtZW50KGVudGVyaW5nVHJhbnNpdGlvbkNvdmVyRWwpIC8vIFJFVklFV1xuICAgICAgICAgIC5iZWZvcmVDbGVhclN0eWxlcyhbT1BBQ0lUWV0pXG4gICAgICAgICAgLmZyb21UbyhPUEFDSVRZLCAwLCAwLjEpO1xuICAgICAgICBlbnRlcmluZ1RyYW5zaXRpb25TaGFkb3dcbiAgICAgICAgICAuYWRkRWxlbWVudChlbnRlcmluZ1RyYW5zaXRpb25TaGFkb3dFbCkgLy8gUkVWSUVXXG4gICAgICAgICAgLmJlZm9yZUNsZWFyU3R5bGVzKFtPUEFDSVRZXSlcbiAgICAgICAgICAuZnJvbVRvKE9QQUNJVFksIDAuMDMsIDAuNyk7XG4gICAgICAgIGVudGVyaW5nVHJhbnNpdGlvbkVmZmVjdC5hZGRBbmltYXRpb24oW2VudGVyaW5nVHJhbnNpdGlvbkNvdmVyLCBlbnRlcmluZ1RyYW5zaXRpb25TaGFkb3ddKTtcbiAgICAgICAgZW50ZXJpbmdDb250ZW50QW5pbWF0aW9uLmFkZEFuaW1hdGlvbihbZW50ZXJpbmdUcmFuc2l0aW9uRWZmZWN0XSk7XG4gICAgICB9XG4gICAgfVxuICAgIGNvbnN0IGVudGVyaW5nQ29udGVudEhhc0xhcmdlVGl0bGUgPSBlbnRlcmluZ0VsLnF1ZXJ5U2VsZWN0b3IoJ2lvbi1oZWFkZXIuaGVhZGVyLWNvbGxhcHNlLWNvbmRlbnNlJyk7XG4gICAgY29uc3QgeyBmb3J3YXJkLCBiYWNrd2FyZCB9ID0gY3JlYXRlTGFyZ2VUaXRsZVRyYW5zaXRpb24ocm9vdEFuaW1hdGlvbiwgaXNSVEwsIGJhY2tEaXJlY3Rpb24sIGVudGVyaW5nRWwsIGxlYXZpbmdFbCk7XG4gICAgZW50ZXJpbmdUb29sQmFyRWxzLmZvckVhY2goKGVudGVyaW5nVG9vbEJhckVsKSA9PiB7XG4gICAgICBjb25zdCBlbnRlcmluZ1Rvb2xCYXIgPSBjcmVhdGVBbmltYXRpb24oKTtcbiAgICAgIGVudGVyaW5nVG9vbEJhci5hZGRFbGVtZW50KGVudGVyaW5nVG9vbEJhckVsKTtcbiAgICAgIHJvb3RBbmltYXRpb24uYWRkQW5pbWF0aW9uKGVudGVyaW5nVG9vbEJhcik7XG4gICAgICBjb25zdCBlbnRlcmluZ1RpdGxlID0gY3JlYXRlQW5pbWF0aW9uKCk7XG4gICAgICBlbnRlcmluZ1RpdGxlLmFkZEVsZW1lbnQoZW50ZXJpbmdUb29sQmFyRWwucXVlcnlTZWxlY3RvcignaW9uLXRpdGxlJykpOyAvLyBSRVZJRVdcbiAgICAgIGNvbnN0IGVudGVyaW5nVG9vbEJhckJ1dHRvbnMgPSBjcmVhdGVBbmltYXRpb24oKTtcbiAgICAgIGNvbnN0IGJ1dHRvbnMgPSBBcnJheS5mcm9tKGVudGVyaW5nVG9vbEJhckVsLnF1ZXJ5U2VsZWN0b3JBbGwoJ2lvbi1idXR0b25zLFttZW51VG9nZ2xlXScpKTtcbiAgICAgIGNvbnN0IHBhcmVudEhlYWRlciA9IGVudGVyaW5nVG9vbEJhckVsLmNsb3Nlc3QoJ2lvbi1oZWFkZXInKTtcbiAgICAgIGNvbnN0IGluYWN0aXZlSGVhZGVyID0gcGFyZW50SGVhZGVyID09PSBudWxsIHx8IHBhcmVudEhlYWRlciA9PT0gdm9pZCAwID8gdm9pZCAwIDogcGFyZW50SGVhZGVyLmNsYXNzTGlzdC5jb250YWlucygnaGVhZGVyLWNvbGxhcHNlLWNvbmRlbnNlLWluYWN0aXZlJyk7XG4gICAgICBsZXQgYnV0dG9uc1RvQW5pbWF0ZTtcbiAgICAgIGlmIChiYWNrRGlyZWN0aW9uKSB7XG4gICAgICAgIGJ1dHRvbnNUb0FuaW1hdGUgPSBidXR0b25zLmZpbHRlcigoYnV0dG9uKSA9PiB7XG4gICAgICAgICAgY29uc3QgaXNDb2xsYXBzZUJ1dHRvbiA9IGJ1dHRvbi5jbGFzc0xpc3QuY29udGFpbnMoJ2J1dHRvbnMtY29sbGFwc2UnKTtcbiAgICAgICAgICByZXR1cm4gKGlzQ29sbGFwc2VCdXR0b24gJiYgIWluYWN0aXZlSGVhZGVyKSB8fCAhaXNDb2xsYXBzZUJ1dHRvbjtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgYnV0dG9uc1RvQW5pbWF0ZSA9IGJ1dHRvbnMuZmlsdGVyKChidXR0b24pID0+ICFidXR0b24uY2xhc3NMaXN0LmNvbnRhaW5zKCdidXR0b25zLWNvbGxhcHNlJykpO1xuICAgICAgfVxuICAgICAgZW50ZXJpbmdUb29sQmFyQnV0dG9ucy5hZGRFbGVtZW50KGJ1dHRvbnNUb0FuaW1hdGUpO1xuICAgICAgY29uc3QgZW50ZXJpbmdUb29sQmFySXRlbXMgPSBjcmVhdGVBbmltYXRpb24oKTtcbiAgICAgIGVudGVyaW5nVG9vbEJhckl0ZW1zLmFkZEVsZW1lbnQoZW50ZXJpbmdUb29sQmFyRWwucXVlcnlTZWxlY3RvckFsbCgnOnNjb3BlID4gKjpub3QoaW9uLXRpdGxlKTpub3QoaW9uLWJ1dHRvbnMpOm5vdChbbWVudVRvZ2dsZV0pJykpO1xuICAgICAgY29uc3QgZW50ZXJpbmdUb29sQmFyQmcgPSBjcmVhdGVBbmltYXRpb24oKTtcbiAgICAgIGVudGVyaW5nVG9vbEJhckJnLmFkZEVsZW1lbnQoc2hhZG93KGVudGVyaW5nVG9vbEJhckVsKS5xdWVyeVNlbGVjdG9yKCcudG9vbGJhci1iYWNrZ3JvdW5kJykpOyAvLyBSRVZJRVdcbiAgICAgIGNvbnN0IGVudGVyaW5nQmFja0J1dHRvbiA9IGNyZWF0ZUFuaW1hdGlvbigpO1xuICAgICAgY29uc3QgYmFja0J1dHRvbkVsID0gZW50ZXJpbmdUb29sQmFyRWwucXVlcnlTZWxlY3RvcignaW9uLWJhY2stYnV0dG9uJyk7XG4gICAgICBpZiAoYmFja0J1dHRvbkVsKSB7XG4gICAgICAgIGVudGVyaW5nQmFja0J1dHRvbi5hZGRFbGVtZW50KGJhY2tCdXR0b25FbCk7XG4gICAgICB9XG4gICAgICBlbnRlcmluZ1Rvb2xCYXIuYWRkQW5pbWF0aW9uKFtcbiAgICAgICAgZW50ZXJpbmdUaXRsZSxcbiAgICAgICAgZW50ZXJpbmdUb29sQmFyQnV0dG9ucyxcbiAgICAgICAgZW50ZXJpbmdUb29sQmFySXRlbXMsXG4gICAgICAgIGVudGVyaW5nVG9vbEJhckJnLFxuICAgICAgICBlbnRlcmluZ0JhY2tCdXR0b24sXG4gICAgICBdKTtcbiAgICAgIGVudGVyaW5nVG9vbEJhckJ1dHRvbnMuZnJvbVRvKE9QQUNJVFksIDAuMDEsIDEpO1xuICAgICAgZW50ZXJpbmdUb29sQmFySXRlbXMuZnJvbVRvKE9QQUNJVFksIDAuMDEsIDEpO1xuICAgICAgaWYgKGJhY2tEaXJlY3Rpb24pIHtcbiAgICAgICAgaWYgKCFpbmFjdGl2ZUhlYWRlcikge1xuICAgICAgICAgIGVudGVyaW5nVGl0bGVcbiAgICAgICAgICAgIC5mcm9tVG8oJ3RyYW5zZm9ybScsIGB0cmFuc2xhdGVYKCR7T0ZGX0xFRlR9KWAsIGB0cmFuc2xhdGVYKCR7Q0VOVEVSfSlgKVxuICAgICAgICAgICAgLmZyb21UbyhPUEFDSVRZLCAwLjAxLCAxKTtcbiAgICAgICAgfVxuICAgICAgICBlbnRlcmluZ1Rvb2xCYXJJdGVtcy5mcm9tVG8oJ3RyYW5zZm9ybScsIGB0cmFuc2xhdGVYKCR7T0ZGX0xFRlR9KWAsIGB0cmFuc2xhdGVYKCR7Q0VOVEVSfSlgKTtcbiAgICAgICAgLy8gYmFjayBkaXJlY3Rpb24sIGVudGVyaW5nIHBhZ2UgaGFzIGEgYmFjayBidXR0b25cbiAgICAgICAgZW50ZXJpbmdCYWNrQnV0dG9uLmZyb21UbyhPUEFDSVRZLCAwLjAxLCAxKTtcbiAgICAgIH1cbiAgICAgIGVsc2Uge1xuICAgICAgICAvLyBlbnRlcmluZyB0b29sYmFyLCBmb3J3YXJkIGRpcmVjdGlvblxuICAgICAgICBpZiAoIWVudGVyaW5nQ29udGVudEhhc0xhcmdlVGl0bGUpIHtcbiAgICAgICAgICBlbnRlcmluZ1RpdGxlXG4gICAgICAgICAgICAuZnJvbVRvKCd0cmFuc2Zvcm0nLCBgdHJhbnNsYXRlWCgke09GRl9SSUdIVH0pYCwgYHRyYW5zbGF0ZVgoJHtDRU5URVJ9KWApXG4gICAgICAgICAgICAuZnJvbVRvKE9QQUNJVFksIDAuMDEsIDEpO1xuICAgICAgICB9XG4gICAgICAgIGVudGVyaW5nVG9vbEJhckl0ZW1zLmZyb21UbygndHJhbnNmb3JtJywgYHRyYW5zbGF0ZVgoJHtPRkZfUklHSFR9KWAsIGB0cmFuc2xhdGVYKCR7Q0VOVEVSfSlgKTtcbiAgICAgICAgZW50ZXJpbmdUb29sQmFyQmcuYmVmb3JlQ2xlYXJTdHlsZXMoW09QQUNJVFksICd0cmFuc2Zvcm0nXSk7XG4gICAgICAgIGNvbnN0IHRyYW5zbHVjZW50SGVhZGVyID0gcGFyZW50SGVhZGVyID09PSBudWxsIHx8IHBhcmVudEhlYWRlciA9PT0gdm9pZCAwID8gdm9pZCAwIDogcGFyZW50SGVhZGVyLnRyYW5zbHVjZW50O1xuICAgICAgICBpZiAoIXRyYW5zbHVjZW50SGVhZGVyKSB7XG4gICAgICAgICAgZW50ZXJpbmdUb29sQmFyQmcuZnJvbVRvKE9QQUNJVFksIDAuMDEsICd2YXIoLS1vcGFjaXR5KScpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIGVudGVyaW5nVG9vbEJhckJnLmZyb21UbygndHJhbnNmb3JtJywgaXNSVEwgPyAndHJhbnNsYXRlWCgtMTAwJSknIDogJ3RyYW5zbGF0ZVgoMTAwJSknLCAndHJhbnNsYXRlWCgwcHgpJyk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gZm9yd2FyZCBkaXJlY3Rpb24sIGVudGVyaW5nIHBhZ2UgaGFzIGEgYmFjayBidXR0b25cbiAgICAgICAgaWYgKCFmb3J3YXJkKSB7XG4gICAgICAgICAgZW50ZXJpbmdCYWNrQnV0dG9uLmZyb21UbyhPUEFDSVRZLCAwLjAxLCAxKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYmFja0J1dHRvbkVsICYmICFmb3J3YXJkKSB7XG4gICAgICAgICAgY29uc3QgZW50ZXJpbmdCYWNrQnRuVGV4dCA9IGNyZWF0ZUFuaW1hdGlvbigpO1xuICAgICAgICAgIGVudGVyaW5nQmFja0J0blRleHRcbiAgICAgICAgICAgIC5hZGRFbGVtZW50KHNoYWRvdyhiYWNrQnV0dG9uRWwpLnF1ZXJ5U2VsZWN0b3IoJy5idXR0b24tdGV4dCcpKSAvLyBSRVZJRVdcbiAgICAgICAgICAgIC5mcm9tVG8oYHRyYW5zZm9ybWAsIGlzUlRMID8gJ3RyYW5zbGF0ZVgoLTEwMHB4KScgOiAndHJhbnNsYXRlWCgxMDBweCknLCAndHJhbnNsYXRlWCgwcHgpJyk7XG4gICAgICAgICAgZW50ZXJpbmdUb29sQmFyLmFkZEFuaW1hdGlvbihlbnRlcmluZ0JhY2tCdG5UZXh0KTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICAgIC8vIHNldHVwIGxlYXZpbmcgdmlld1xuICAgIGlmIChsZWF2aW5nRWwpIHtcbiAgICAgIGNvbnN0IGxlYXZpbmdDb250ZW50ID0gY3JlYXRlQW5pbWF0aW9uKCk7XG4gICAgICBjb25zdCBsZWF2aW5nQ29udGVudEVsID0gbGVhdmluZ0VsLnF1ZXJ5U2VsZWN0b3IoJzpzY29wZSA+IGlvbi1jb250ZW50Jyk7XG4gICAgICBjb25zdCBsZWF2aW5nVG9vbEJhckVscyA9IGxlYXZpbmdFbC5xdWVyeVNlbGVjdG9yQWxsKCc6c2NvcGUgPiBpb24taGVhZGVyID4gaW9uLXRvb2xiYXInKTtcbiAgICAgIGNvbnN0IGxlYXZpbmdIZWFkZXJFbHMgPSBsZWF2aW5nRWwucXVlcnlTZWxlY3RvckFsbCgnOnNjb3BlID4gaW9uLWhlYWRlciA+ICo6bm90KGlvbi10b29sYmFyKSwgOnNjb3BlID4gaW9uLWZvb3RlciA+IConKTtcbiAgICAgIGlmICghbGVhdmluZ0NvbnRlbnRFbCAmJiBsZWF2aW5nVG9vbEJhckVscy5sZW5ndGggPT09IDAgJiYgbGVhdmluZ0hlYWRlckVscy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgbGVhdmluZ0NvbnRlbnQuYWRkRWxlbWVudChsZWF2aW5nRWwucXVlcnlTZWxlY3RvcignOnNjb3BlID4gLmlvbi1wYWdlLCA6c2NvcGUgPiBpb24tbmF2LCA6c2NvcGUgPiBpb24tdGFicycpKTsgLy8gUkVWSUVXXG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgbGVhdmluZ0NvbnRlbnQuYWRkRWxlbWVudChsZWF2aW5nQ29udGVudEVsKTsgLy8gUkVWSUVXXG4gICAgICAgIGxlYXZpbmdDb250ZW50LmFkZEVsZW1lbnQobGVhdmluZ0hlYWRlckVscyk7XG4gICAgICB9XG4gICAgICByb290QW5pbWF0aW9uLmFkZEFuaW1hdGlvbihsZWF2aW5nQ29udGVudCk7XG4gICAgICBpZiAoYmFja0RpcmVjdGlvbikge1xuICAgICAgICAvLyBsZWF2aW5nIGNvbnRlbnQsIGJhY2sgZGlyZWN0aW9uXG4gICAgICAgIGxlYXZpbmdDb250ZW50XG4gICAgICAgICAgLmJlZm9yZUNsZWFyU3R5bGVzKFtPUEFDSVRZXSlcbiAgICAgICAgICAuZnJvbVRvKCd0cmFuc2Zvcm0nLCBgdHJhbnNsYXRlWCgke0NFTlRFUn0pYCwgaXNSVEwgPyAndHJhbnNsYXRlWCgtMTAwJSknIDogJ3RyYW5zbGF0ZVgoMTAwJSknKTtcbiAgICAgICAgY29uc3QgbGVhdmluZ1BhZ2UgPSBnZXRJb25QYWdlRWxlbWVudChsZWF2aW5nRWwpO1xuICAgICAgICByb290QW5pbWF0aW9uLmFmdGVyQWRkV3JpdGUoKCkgPT4ge1xuICAgICAgICAgIGlmIChyb290QW5pbWF0aW9uLmdldERpcmVjdGlvbigpID09PSAnbm9ybWFsJykge1xuICAgICAgICAgICAgbGVhdmluZ1BhZ2Uuc3R5bGUuc2V0UHJvcGVydHkoJ2Rpc3BsYXknLCAnbm9uZScpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgLy8gbGVhdmluZyBjb250ZW50LCBmb3J3YXJkIGRpcmVjdGlvblxuICAgICAgICBsZWF2aW5nQ29udGVudFxuICAgICAgICAgIC5mcm9tVG8oJ3RyYW5zZm9ybScsIGB0cmFuc2xhdGVYKCR7Q0VOVEVSfSlgLCBgdHJhbnNsYXRlWCgke09GRl9MRUZUfSlgKVxuICAgICAgICAgIC5mcm9tVG8oT1BBQ0lUWSwgMSwgT0ZGX09QQUNJVFkpO1xuICAgICAgfVxuICAgICAgaWYgKGxlYXZpbmdDb250ZW50RWwpIHtcbiAgICAgICAgY29uc3QgbGVhdmluZ1RyYW5zaXRpb25FZmZlY3RFbCA9IHNoYWRvdyhsZWF2aW5nQ29udGVudEVsKS5xdWVyeVNlbGVjdG9yKCcudHJhbnNpdGlvbi1lZmZlY3QnKTtcbiAgICAgICAgaWYgKGxlYXZpbmdUcmFuc2l0aW9uRWZmZWN0RWwpIHtcbiAgICAgICAgICBjb25zdCBsZWF2aW5nVHJhbnNpdGlvbkNvdmVyRWwgPSBsZWF2aW5nVHJhbnNpdGlvbkVmZmVjdEVsLnF1ZXJ5U2VsZWN0b3IoJy50cmFuc2l0aW9uLWNvdmVyJyk7XG4gICAgICAgICAgY29uc3QgbGVhdmluZ1RyYW5zaXRpb25TaGFkb3dFbCA9IGxlYXZpbmdUcmFuc2l0aW9uRWZmZWN0RWwucXVlcnlTZWxlY3RvcignLnRyYW5zaXRpb24tc2hhZG93Jyk7XG4gICAgICAgICAgY29uc3QgbGVhdmluZ1RyYW5zaXRpb25FZmZlY3QgPSBjcmVhdGVBbmltYXRpb24oKTtcbiAgICAgICAgICBjb25zdCBsZWF2aW5nVHJhbnNpdGlvbkNvdmVyID0gY3JlYXRlQW5pbWF0aW9uKCk7XG4gICAgICAgICAgY29uc3QgbGVhdmluZ1RyYW5zaXRpb25TaGFkb3cgPSBjcmVhdGVBbmltYXRpb24oKTtcbiAgICAgICAgICBsZWF2aW5nVHJhbnNpdGlvbkVmZmVjdFxuICAgICAgICAgICAgLmFkZEVsZW1lbnQobGVhdmluZ1RyYW5zaXRpb25FZmZlY3RFbClcbiAgICAgICAgICAgIC5iZWZvcmVTdHlsZXMoeyBvcGFjaXR5OiAnMScsIGRpc3BsYXk6ICdibG9jaycgfSlcbiAgICAgICAgICAgIC5hZnRlclN0eWxlcyh7IG9wYWNpdHk6ICcnLCBkaXNwbGF5OiAnJyB9KTtcbiAgICAgICAgICBsZWF2aW5nVHJhbnNpdGlvbkNvdmVyXG4gICAgICAgICAgICAuYWRkRWxlbWVudChsZWF2aW5nVHJhbnNpdGlvbkNvdmVyRWwpIC8vIFJFVklFV1xuICAgICAgICAgICAgLmJlZm9yZUNsZWFyU3R5bGVzKFtPUEFDSVRZXSlcbiAgICAgICAgICAgIC5mcm9tVG8oT1BBQ0lUWSwgMC4xLCAwKTtcbiAgICAgICAgICBsZWF2aW5nVHJhbnNpdGlvblNoYWRvd1xuICAgICAgICAgICAgLmFkZEVsZW1lbnQobGVhdmluZ1RyYW5zaXRpb25TaGFkb3dFbCkgLy8gUkVWSUVXXG4gICAgICAgICAgICAuYmVmb3JlQ2xlYXJTdHlsZXMoW09QQUNJVFldKVxuICAgICAgICAgICAgLmZyb21UbyhPUEFDSVRZLCAwLjcsIDAuMDMpO1xuICAgICAgICAgIGxlYXZpbmdUcmFuc2l0aW9uRWZmZWN0LmFkZEFuaW1hdGlvbihbbGVhdmluZ1RyYW5zaXRpb25Db3ZlciwgbGVhdmluZ1RyYW5zaXRpb25TaGFkb3ddKTtcbiAgICAgICAgICBsZWF2aW5nQ29udGVudC5hZGRBbmltYXRpb24oW2xlYXZpbmdUcmFuc2l0aW9uRWZmZWN0XSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxlYXZpbmdUb29sQmFyRWxzLmZvckVhY2goKGxlYXZpbmdUb29sQmFyRWwpID0+IHtcbiAgICAgICAgY29uc3QgbGVhdmluZ1Rvb2xCYXIgPSBjcmVhdGVBbmltYXRpb24oKTtcbiAgICAgICAgbGVhdmluZ1Rvb2xCYXIuYWRkRWxlbWVudChsZWF2aW5nVG9vbEJhckVsKTtcbiAgICAgICAgY29uc3QgbGVhdmluZ1RpdGxlID0gY3JlYXRlQW5pbWF0aW9uKCk7XG4gICAgICAgIGxlYXZpbmdUaXRsZS5hZGRFbGVtZW50KGxlYXZpbmdUb29sQmFyRWwucXVlcnlTZWxlY3RvcignaW9uLXRpdGxlJykpOyAvLyBSRVZJRVdcbiAgICAgICAgY29uc3QgbGVhdmluZ1Rvb2xCYXJCdXR0b25zID0gY3JlYXRlQW5pbWF0aW9uKCk7XG4gICAgICAgIGNvbnN0IGJ1dHRvbnMgPSBsZWF2aW5nVG9vbEJhckVsLnF1ZXJ5U2VsZWN0b3JBbGwoJ2lvbi1idXR0b25zLFttZW51VG9nZ2xlXScpO1xuICAgICAgICBjb25zdCBwYXJlbnRIZWFkZXIgPSBsZWF2aW5nVG9vbEJhckVsLmNsb3Nlc3QoJ2lvbi1oZWFkZXInKTtcbiAgICAgICAgY29uc3QgaW5hY3RpdmVIZWFkZXIgPSBwYXJlbnRIZWFkZXIgPT09IG51bGwgfHwgcGFyZW50SGVhZGVyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBwYXJlbnRIZWFkZXIuY2xhc3NMaXN0LmNvbnRhaW5zKCdoZWFkZXItY29sbGFwc2UtY29uZGVuc2UtaW5hY3RpdmUnKTtcbiAgICAgICAgY29uc3QgYnV0dG9uc1RvQW5pbWF0ZSA9IEFycmF5LmZyb20oYnV0dG9ucykuZmlsdGVyKChidXR0b24pID0+IHtcbiAgICAgICAgICBjb25zdCBpc0NvbGxhcHNlQnV0dG9uID0gYnV0dG9uLmNsYXNzTGlzdC5jb250YWlucygnYnV0dG9ucy1jb2xsYXBzZScpO1xuICAgICAgICAgIHJldHVybiAoaXNDb2xsYXBzZUJ1dHRvbiAmJiAhaW5hY3RpdmVIZWFkZXIpIHx8ICFpc0NvbGxhcHNlQnV0dG9uO1xuICAgICAgICB9KTtcbiAgICAgICAgbGVhdmluZ1Rvb2xCYXJCdXR0b25zLmFkZEVsZW1lbnQoYnV0dG9uc1RvQW5pbWF0ZSk7XG4gICAgICAgIGNvbnN0IGxlYXZpbmdUb29sQmFySXRlbXMgPSBjcmVhdGVBbmltYXRpb24oKTtcbiAgICAgICAgY29uc3QgbGVhdmluZ1Rvb2xCYXJJdGVtRWxzID0gbGVhdmluZ1Rvb2xCYXJFbC5xdWVyeVNlbGVjdG9yQWxsKCc6c2NvcGUgPiAqOm5vdChpb24tdGl0bGUpOm5vdChpb24tYnV0dG9ucyk6bm90KFttZW51VG9nZ2xlXSknKTtcbiAgICAgICAgaWYgKGxlYXZpbmdUb29sQmFySXRlbUVscy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgbGVhdmluZ1Rvb2xCYXJJdGVtcy5hZGRFbGVtZW50KGxlYXZpbmdUb29sQmFySXRlbUVscyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbGVhdmluZ1Rvb2xCYXJCZyA9IGNyZWF0ZUFuaW1hdGlvbigpO1xuICAgICAgICBsZWF2aW5nVG9vbEJhckJnLmFkZEVsZW1lbnQoc2hhZG93KGxlYXZpbmdUb29sQmFyRWwpLnF1ZXJ5U2VsZWN0b3IoJy50b29sYmFyLWJhY2tncm91bmQnKSk7IC8vIFJFVklFV1xuICAgICAgICBjb25zdCBsZWF2aW5nQmFja0J1dHRvbiA9IGNyZWF0ZUFuaW1hdGlvbigpO1xuICAgICAgICBjb25zdCBiYWNrQnV0dG9uRWwgPSBsZWF2aW5nVG9vbEJhckVsLnF1ZXJ5U2VsZWN0b3IoJ2lvbi1iYWNrLWJ1dHRvbicpO1xuICAgICAgICBpZiAoYmFja0J1dHRvbkVsKSB7XG4gICAgICAgICAgbGVhdmluZ0JhY2tCdXR0b24uYWRkRWxlbWVudChiYWNrQnV0dG9uRWwpO1xuICAgICAgICB9XG4gICAgICAgIGxlYXZpbmdUb29sQmFyLmFkZEFuaW1hdGlvbihbXG4gICAgICAgICAgbGVhdmluZ1RpdGxlLFxuICAgICAgICAgIGxlYXZpbmdUb29sQmFyQnV0dG9ucyxcbiAgICAgICAgICBsZWF2aW5nVG9vbEJhckl0ZW1zLFxuICAgICAgICAgIGxlYXZpbmdCYWNrQnV0dG9uLFxuICAgICAgICAgIGxlYXZpbmdUb29sQmFyQmcsXG4gICAgICAgIF0pO1xuICAgICAgICByb290QW5pbWF0aW9uLmFkZEFuaW1hdGlvbihsZWF2aW5nVG9vbEJhcik7XG4gICAgICAgIC8vIGZhZGUgb3V0IGxlYXZpbmcgdG9vbGJhciBpdGVtc1xuICAgICAgICBsZWF2aW5nQmFja0J1dHRvbi5mcm9tVG8oT1BBQ0lUWSwgMC45OSwgMCk7XG4gICAgICAgIGxlYXZpbmdUb29sQmFyQnV0dG9ucy5mcm9tVG8oT1BBQ0lUWSwgMC45OSwgMCk7XG4gICAgICAgIGxlYXZpbmdUb29sQmFySXRlbXMuZnJvbVRvKE9QQUNJVFksIDAuOTksIDApO1xuICAgICAgICBpZiAoYmFja0RpcmVjdGlvbikge1xuICAgICAgICAgIGlmICghaW5hY3RpdmVIZWFkZXIpIHtcbiAgICAgICAgICAgIC8vIGxlYXZpbmcgdG9vbGJhciwgYmFjayBkaXJlY3Rpb25cbiAgICAgICAgICAgIGxlYXZpbmdUaXRsZVxuICAgICAgICAgICAgICAuZnJvbVRvKCd0cmFuc2Zvcm0nLCBgdHJhbnNsYXRlWCgke0NFTlRFUn0pYCwgaXNSVEwgPyAndHJhbnNsYXRlWCgtMTAwJSknIDogJ3RyYW5zbGF0ZVgoMTAwJSknKVxuICAgICAgICAgICAgICAuZnJvbVRvKE9QQUNJVFksIDAuOTksIDApO1xuICAgICAgICAgIH1cbiAgICAgICAgICBsZWF2aW5nVG9vbEJhckl0ZW1zLmZyb21UbygndHJhbnNmb3JtJywgYHRyYW5zbGF0ZVgoJHtDRU5URVJ9KWAsIGlzUlRMID8gJ3RyYW5zbGF0ZVgoLTEwMCUpJyA6ICd0cmFuc2xhdGVYKDEwMCUpJyk7XG4gICAgICAgICAgbGVhdmluZ1Rvb2xCYXJCZy5iZWZvcmVDbGVhclN0eWxlcyhbT1BBQ0lUWSwgJ3RyYW5zZm9ybSddKTtcbiAgICAgICAgICAvLyBsZWF2aW5nIHRvb2xiYXIsIGJhY2sgZGlyZWN0aW9uLCBhbmQgdGhlcmUncyBubyBlbnRlcmluZyB0b29sYmFyXG4gICAgICAgICAgLy8gc2hvdWxkIGp1c3Qgc2xpZGUgb3V0LCBubyBmYWRpbmcgb3V0XG4gICAgICAgICAgY29uc3QgdHJhbnNsdWNlbnRIZWFkZXIgPSBwYXJlbnRIZWFkZXIgPT09IG51bGwgfHwgcGFyZW50SGVhZGVyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBwYXJlbnRIZWFkZXIudHJhbnNsdWNlbnQ7XG4gICAgICAgICAgaWYgKCF0cmFuc2x1Y2VudEhlYWRlcikge1xuICAgICAgICAgICAgbGVhdmluZ1Rvb2xCYXJCZy5mcm9tVG8oT1BBQ0lUWSwgJ3ZhcigtLW9wYWNpdHkpJywgMCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbGVhdmluZ1Rvb2xCYXJCZy5mcm9tVG8oJ3RyYW5zZm9ybScsICd0cmFuc2xhdGVYKDBweCknLCBpc1JUTCA/ICd0cmFuc2xhdGVYKC0xMDAlKScgOiAndHJhbnNsYXRlWCgxMDAlKScpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAoYmFja0J1dHRvbkVsICYmICFiYWNrd2FyZCkge1xuICAgICAgICAgICAgY29uc3QgbGVhdmluZ0JhY2tCdG5UZXh0ID0gY3JlYXRlQW5pbWF0aW9uKCk7XG4gICAgICAgICAgICBsZWF2aW5nQmFja0J0blRleHRcbiAgICAgICAgICAgICAgLmFkZEVsZW1lbnQoc2hhZG93KGJhY2tCdXR0b25FbCkucXVlcnlTZWxlY3RvcignLmJ1dHRvbi10ZXh0JykpIC8vIFJFVklFV1xuICAgICAgICAgICAgICAuZnJvbVRvKCd0cmFuc2Zvcm0nLCBgdHJhbnNsYXRlWCgke0NFTlRFUn0pYCwgYHRyYW5zbGF0ZVgoJHsoaXNSVEwgPyAtMTI0IDogMTI0KSArICdweCd9KWApO1xuICAgICAgICAgICAgbGVhdmluZ1Rvb2xCYXIuYWRkQW5pbWF0aW9uKGxlYXZpbmdCYWNrQnRuVGV4dCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIC8vIGxlYXZpbmcgdG9vbGJhciwgZm9yd2FyZCBkaXJlY3Rpb25cbiAgICAgICAgICBpZiAoIWluYWN0aXZlSGVhZGVyKSB7XG4gICAgICAgICAgICBsZWF2aW5nVGl0bGVcbiAgICAgICAgICAgICAgLmZyb21UbygndHJhbnNmb3JtJywgYHRyYW5zbGF0ZVgoJHtDRU5URVJ9KWAsIGB0cmFuc2xhdGVYKCR7T0ZGX0xFRlR9KWApXG4gICAgICAgICAgICAgIC5mcm9tVG8oT1BBQ0lUWSwgMC45OSwgMClcbiAgICAgICAgICAgICAgLmFmdGVyQ2xlYXJTdHlsZXMoW1RSQU5TRk9STSwgT1BBQ0lUWV0pO1xuICAgICAgICAgIH1cbiAgICAgICAgICBsZWF2aW5nVG9vbEJhckl0ZW1zXG4gICAgICAgICAgICAuZnJvbVRvKCd0cmFuc2Zvcm0nLCBgdHJhbnNsYXRlWCgke0NFTlRFUn0pYCwgYHRyYW5zbGF0ZVgoJHtPRkZfTEVGVH0pYClcbiAgICAgICAgICAgIC5hZnRlckNsZWFyU3R5bGVzKFtUUkFOU0ZPUk0sIE9QQUNJVFldKTtcbiAgICAgICAgICBsZWF2aW5nQmFja0J1dHRvbi5hZnRlckNsZWFyU3R5bGVzKFtPUEFDSVRZXSk7XG4gICAgICAgICAgbGVhdmluZ1RpdGxlLmFmdGVyQ2xlYXJTdHlsZXMoW09QQUNJVFldKTtcbiAgICAgICAgICBsZWF2aW5nVG9vbEJhckJ1dHRvbnMuYWZ0ZXJDbGVhclN0eWxlcyhbT1BBQ0lUWV0pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHJvb3RBbmltYXRpb247XG4gIH1cbiAgY2F0Y2ggKGVycikge1xuICAgIHRocm93IGVycjtcbiAgfVxufTtcblxuZXhwb3J0IHsgaW9zVHJhbnNpdGlvbkFuaW1hdGlvbiwgc2hhZG93IH07XG4iXSwibmFtZXMiOlsiRFVSQVRJT04iLCJnZXRDbG9uZWRFbGVtZW50IiwidGFnTmFtZSIsInNoYWRvdyIsImVsIiwiZ2V0TGFyZ2VUaXRsZSIsInJlZkVsIiwidGFicyIsInF1ZXJ5IiwiYWN0aXZlVGFiIiwiZ2V0QmFja0J1dHRvbiIsImJhY2tEaXJlY3Rpb24iLCJidXR0b25zTGlzdCIsImJ1dHRvbnMiLCJwYXJlbnRIZWFkZXIiLCJhY3RpdmVIZWFkZXIiLCJiYWNrQnV0dG9uIiwiYnV0dG9uc0NvbGxhcHNlIiwic3RhcnRTbG90IiwiY3JlYXRlTGFyZ2VUaXRsZVRyYW5zaXRpb24iLCJyb290QW5pbWF0aW9uIiwicnRsIiwiZW50ZXJpbmdFbCIsImxlYXZpbmdFbCIsImVudGVyaW5nQmFja0J1dHRvbiIsImxlYXZpbmdMYXJnZVRpdGxlIiwiZW50ZXJpbmdMYXJnZVRpdGxlIiwibGVhdmluZ0JhY2tCdXR0b24iLCJzaG91bGRBbmltYXRpb25Gb3J3YXJkIiwic2hvdWxkQW5pbWF0aW9uQmFja3dhcmQiLCJsZWF2aW5nTGFyZ2VUaXRsZUJveCIsImVudGVyaW5nQmFja0J1dHRvbkJveCIsImFuaW1hdGVMYXJnZVRpdGxlIiwiYW5pbWF0ZUJhY2tCdXR0b24iLCJlbnRlcmluZ0xhcmdlVGl0bGVCb3giLCJsZWF2aW5nQmFja0J1dHRvbkJveCIsImJhY2tCdXR0b25FbCIsImxhcmdlVGl0bGVCb3giLCJiYWNrQnV0dG9uQm94IiwiQkFDS19CVVRUT05fU1RBUlRfT0ZGU0VUIiwiU1RBUlRfVEVYVF9UUkFOU0xBVEUiLCJFTkRfVEVYVF9UUkFOU0xBVEUiLCJJQ09OX1RSQU5TTEFURSIsIlRFWFRfT1JJR0lOX1giLCJJQ09OX09SSUdJTl9YIiwiRk9SV0FSRF9URVhUX0tFWUZSQU1FUyIsIkJBQ0tXQVJEX1RFWFRfS0VZRlJBTUVTIiwiVEVYVF9LRVlGUkFNRVMiLCJGT1JXQVJEX0lDT05fS0VZRlJBTUVTIiwiQkFDS1dBUkRfSUNPTl9LRVlGUkFNRVMiLCJJQ09OX0tFWUZSQU1FUyIsImVudGVyaW5nQmFja0J1dHRvblRleHRBbmltYXRpb24iLCJjcmVhdGVBbmltYXRpb24iLCJlbnRlcmluZ0JhY2tCdXR0b25JY29uQW5pbWF0aW9uIiwiY2xvbmVkQmFja0J1dHRvbkVsIiwiYmFja0J1dHRvblRleHRFbCIsImJhY2tCdXR0b25JY29uRWwiLCJsYXJnZVRpdGxlRWwiLCJUSVRMRV9TVEFSVF9PRkZTRVQiLCJTVEFSVF9UUkFOU0xBVEUiLCJPUklHSU5fWCIsIkJBQ0tXQVJEU19LRVlGUkFNRVMiLCJGT1JXQVJEU19LRVlGUkFNRVMiLCJLRVlGUkFNRVMiLCJjbG9uZWRUaXRsZUVsIiwiY2xvbmVkTGFyZ2VUaXRsZUFuaW1hdGlvbiIsImlvc1RyYW5zaXRpb25BbmltYXRpb24iLCJuYXZFbCIsIm9wdHMiLCJfYSIsIkVBU0lORyIsIk9QQUNJVFkiLCJUUkFOU0ZPUk0iLCJDRU5URVIiLCJpc1JUTCIsIk9GRl9SSUdIVCIsIk9GRl9MRUZUIiwiY29udGVudEVsIiwiaGVhZGVyRWxzIiwiZW50ZXJpbmdUb29sQmFyRWxzIiwiZW50ZXJpbmdDb250ZW50QW5pbWF0aW9uIiwibmF2RGVjb3JBbmltYXRpb24iLCJlbnRlcmluZ1RyYW5zaXRpb25FZmZlY3RFbCIsImVudGVyaW5nVHJhbnNpdGlvbkNvdmVyRWwiLCJlbnRlcmluZ1RyYW5zaXRpb25TaGFkb3dFbCIsImVudGVyaW5nVHJhbnNpdGlvbkVmZmVjdCIsImVudGVyaW5nVHJhbnNpdGlvbkNvdmVyIiwiZW50ZXJpbmdUcmFuc2l0aW9uU2hhZG93IiwiZW50ZXJpbmdDb250ZW50SGFzTGFyZ2VUaXRsZSIsImZvcndhcmQiLCJiYWNrd2FyZCIsImVudGVyaW5nVG9vbEJhckVsIiwiZW50ZXJpbmdUb29sQmFyIiwiZW50ZXJpbmdUaXRsZSIsImVudGVyaW5nVG9vbEJhckJ1dHRvbnMiLCJpbmFjdGl2ZUhlYWRlciIsImJ1dHRvbnNUb0FuaW1hdGUiLCJidXR0b24iLCJpc0NvbGxhcHNlQnV0dG9uIiwiZW50ZXJpbmdUb29sQmFySXRlbXMiLCJlbnRlcmluZ1Rvb2xCYXJCZyIsImVudGVyaW5nQmFja0J0blRleHQiLCJsZWF2aW5nQ29udGVudCIsImxlYXZpbmdDb250ZW50RWwiLCJsZWF2aW5nVG9vbEJhckVscyIsImxlYXZpbmdIZWFkZXJFbHMiLCJsZWF2aW5nUGFnZSIsImdldElvblBhZ2VFbGVtZW50IiwibGVhdmluZ1RyYW5zaXRpb25FZmZlY3RFbCIsImxlYXZpbmdUcmFuc2l0aW9uQ292ZXJFbCIsImxlYXZpbmdUcmFuc2l0aW9uU2hhZG93RWwiLCJsZWF2aW5nVHJhbnNpdGlvbkVmZmVjdCIsImxlYXZpbmdUcmFuc2l0aW9uQ292ZXIiLCJsZWF2aW5nVHJhbnNpdGlvblNoYWRvdyIsImxlYXZpbmdUb29sQmFyRWwiLCJsZWF2aW5nVG9vbEJhciIsImxlYXZpbmdUaXRsZSIsImxlYXZpbmdUb29sQmFyQnV0dG9ucyIsImxlYXZpbmdUb29sQmFySXRlbXMiLCJsZWF2aW5nVG9vbEJhckl0ZW1FbHMiLCJsZWF2aW5nVG9vbEJhckJnIiwibGVhdmluZ0JhY2tCdG5UZXh0IiwiZXJyIl0sIm1hcHBpbmdzIjoia0xBQUE7QUFBQTtBQUFBLEdBTUEsTUFBTUEsRUFBVyxJQUVYQyxFQUFvQkMsR0FDakIsU0FBUyxjQUFjLEdBQUdBLHNCQUE0QixFQUV6REMsRUFBVUMsR0FDUEEsRUFBRyxZQUFjQSxFQUVwQkMsRUFBaUJDLEdBQVUsQ0FDL0IsTUFBTUMsRUFBT0QsRUFBTSxVQUFZLFdBQWFBLEVBQVFBLEVBQU0sY0FBYyxVQUFVLEVBQzVFRSxFQUFRLHVGQUNkLEdBQUlELEdBQVEsS0FBTSxDQUNoQixNQUFNRSxFQUFZRixFQUFLLGNBQWMsMkRBQTJELEVBQ2hHLE9BQU9FLEdBQWEsS0FBT0EsRUFBVSxjQUFjRCxDQUFLLEVBQUksS0FFOUQsT0FBT0YsRUFBTSxjQUFjRSxDQUFLLENBQ2xDLEVBQ01FLEVBQWdCLENBQUNKLEVBQU9LLElBQWtCLENBQzlDLE1BQU1KLEVBQU9ELEVBQU0sVUFBWSxXQUFhQSxFQUFRQSxFQUFNLGNBQWMsVUFBVSxFQUNsRixJQUFJTSxFQUFjLENBQUEsRUFDbEIsR0FBSUwsR0FBUSxLQUFNLENBQ2hCLE1BQU1FLEVBQVlGLEVBQUssY0FBYywyREFBMkQsRUFDNUZFLEdBQWEsT0FDZkcsRUFBY0gsRUFBVSxpQkFB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QUNBQyxFQUNBQyxFQUNBM0YsRUFDQTZGLENBQ1YsQ0FBUyxFQUNEcEcsRUFBYyxhQUFhK0YsQ0FBYyxFQUV6Q3hGLEVBQWtCLE9BQU80QyxFQUFTLElBQU0sQ0FBQyxFQUN6QzhDLEVBQXNCLE9BQU85QyxFQUFTLElBQU0sQ0FBQyxFQUM3QytDLEVBQW9CLE9BQU8vQyxFQUFTLElBQU0sQ0FBQyxFQUN2QzVELEdBa0JGLEdBakJLb0YsR0FFSHFCLEVBQ0csT0FBTyxZQUFhLGNBQWMzQyxLQUFXQyxFQUFRLG9CQUFzQixrQkFBa0IsRUFDN0YsT0FBT0gsRUFBUyxJQUFNLENBQUMsRUFFNUIrQyxFQUFvQixPQUFPLFlBQWEsY0FBYzdDLEtBQVdDLEVBQVEsb0JBQXNCLGtCQUFrQixFQUNqSDhDLEVBQWlCLGtCQUFrQixDQUFDakQsRUFBUyxXQUFXLENBQUMsR0FHL0J6RCxHQUFpQixLQUFrQyxPQUFTQSxFQUFhLGFBS2pHMEcsRUFBaUIsT0FBTyxZQUFhLGtCQUFtQjlDLEVBQVEsb0JBQXNCLGtCQUFrQixFQUh4RzhDLEVBQWlCLE9BQU9qRCxFQUFTLGlCQUFrQixDQUFDLEVBS2xEbkMsR0FBZ0IsQ0FBQ3NELEVBQVUsQ0FDN0IsTUFBTStCLEVBQXFCckUsRUFBQUEsa0JBQzNCcUUsRUFDRyxXQUFXdEgsRUFBT2lDLENBQVksRUFBRSxjQUFjLGNBQWMsQ0FBQyxFQUM3RCxPQUFPLFlBQWEsY0FBY3FDLEtBQVcsZUFBZUMsRUFBUSxLQUFPLEtBQU8sT0FBTyxFQUM1RnlDLEVBQWUsYUFBYU0sQ0FBa0IsUUFLM0MxQixHQUNIcUIsRUFDRyxPQUFPLFlBQWEsY0FBYzNDLEtBQVcsY0FBY0csSUFBVyxFQUN0RSxPQUFPTCxFQUFTLElBQU0sQ0FBQyxFQUN2QixpQkFBaUIsQ0FBQ0MsRUFBV0QsQ0FBTyxDQUFDLEVBRTFDK0MsRUFDRyxPQUFPLFlBQWEsY0FBYzdDLEtBQVcsY0FBY0csSUFBVyxFQUN0RSxpQkFBaUIsQ0FBQ0osRUFBV0QsQ0FBTyxDQUFDLEVBQ3hDNUMsRUFBa0IsaUJBQWlCLENBQUM0QyxDQUFPLENBQUMsRUFDNUM2QyxFQUFhLGlCQUFpQixDQUFDN0MsQ0FBTyxDQUFDLEVBQ3ZDOEMsRUFBc0IsaUJBQWlCLENBQUM5QyxDQUFPLENBQUMsQ0FFMUQsQ0FBTyxFQUVILE9BQU9uRCxDQUNSLE9BQ01zRyxFQUFQLENBQ0UsTUFBTUEsQ0FDUCxDQUNIIiwieF9nb29nbGVfaWdub3JlTGlzdCI6WzBdfQ==
